// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from cosmos_like_wallet.djinni

#ifndef DJINNI_GENERATED_COSMOSLIKEMSGDEPOSIT_HPP
#define DJINNI_GENERATED_COSMOSLIKEMSGDEPOSIT_HPP

#include "CosmosLikeAmount.hpp"
#include <iostream>
#include <string>
#include <utility>
#include <vector>

namespace ledger { namespace core { namespace api {

struct CosmosLikeMsgDeposit final {
    std::string depositor;
    std::string proposalId;
    std::vector<CosmosLikeAmount> amounts;

    CosmosLikeMsgDeposit(std::string depositor_,
                         std::string proposalId_,
                         std::vector<CosmosLikeAmount> amounts_)
    : depositor(std::move(depositor_))
    , proposalId(std::move(proposalId_))
    , amounts(std::move(amounts_))
    {}

    CosmosLikeMsgDeposit(const CosmosLikeMsgDeposit& cpy) {
       this->depositor = cpy.depositor;
       this->proposalId = cpy.proposalId;
       this->amounts = cpy.amounts;
    }

    CosmosLikeMsgDeposit() = default;


    CosmosLikeMsgDeposit& operator=(const CosmosLikeMsgDeposit& cpy) {
       this->depositor = cpy.depositor;
       this->proposalId = cpy.proposalId;
       this->amounts = cpy.amounts;
       return *this;
    }

    template <class Archive>
    void load(Archive& archive) {
        archive(depositor, proposalId, amounts);
    }

    template <class Archive>
    void save(Archive& archive) const {
        archive(depositor, proposalId, amounts);
    }
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_COSMOSLIKEMSGDEPOSIT_HPP
